Booking
=========
components
  -featured
  -featuredProperties
  -footer
  -header
  -mailList
  -navbar
  -propertyList
  -searchItem
pages
   -home
   -hotel
   -list
App.css
main.jsx


************************************
App.jsx
-------
import { BrowserRouter, Routes, Route } from "react-router-dom";
import "./App.css";

import Home from "./pages/home/Home";
import List from "./pages/list/List";
import Hotel from "./pages/hotel/Hotel";

const App = () => {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/hotels" element={<List />} />
        <Route path="/hotels/:id" element={<Hotel />} />
      </Routes>
    </BrowserRouter>
  );
};
export default App;
-----------------------------
import "./featured.css";
const Featured = () => {
  return (
    <div className="featured">
      <div className="featuredItem">
        <img
          src="https://cf.bstatic.com/xdata/images/city/max500/957801.webp?k=a969e39bcd40cdcc21786ba92826063e3cb09bf307bcfeac2aa392b838e9b7a5&o="
          alt=""
          className="featuredImg"
        />
        <div className="featuredTitles">
          <h1>Dublin</h1>
          <h2>123 properties</h2>
        </div>
      </div>

      <div className="featuredItem">
        <img
          src="https://cf.bstatic.com/xdata/images/city/max500/690334.webp?k=b99df435f06a15a1568ddd5f55d239507c0156985577681ab91274f917af6dbb&o="
          alt=""
          className="featuredImg"
        />
        <div className="featuredTitles">
          <h1>Reno</h1>
          <h2>533 properties</h2>
        </div>
      </div>

      <div className="featuredItem">
        <img
          src="https://cf.bstatic.com/xdata/images/city/max500/689422.webp?k=2595c93e7e067b9ba95f90713f80ba6e5fa88a66e6e55600bd27a5128808fdf2&o="
          alt=""
          className="featuredImg"
        />
        <div className="featuredTitles">
          <h1>Austin</h1>
          <h2>532 properties</h2>
        </div>
      </div>
    </div>
  );
};
export default Featured;
-------
.featured {
  width: 100%;
  max-width: 1024px;
  display: flex;
  justify-content: space-between;
  gap: 20px;
  z-index: 1;
}
.featuredItem {
  position: relative;
  color: white;
  border-radius: 2px;
  overflow: hidden;
  height: 250px;
  flex: 1;
}
.featuredImg {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.featuredTitles {
  position: absolute;
  bottom: 20px;
  left: 20px;
}
=========================
import "./featuredProperties.css";

const FeaturedProperties = () => {
  return (
    <div className="fp">
      <div className="fpItem">
        <img
          src="https://cf.bstatic.com/xdata/images/hotel/square600/13125860.webp?k=e148feeb802ac3d28d1391dad9e4cf1e12d9231f897d0b53ca067bde8a9d3355&o=&s=1"
          alt=""
          className="fpImg"
        />
        <span className="fpName">Aparthotel Stare Miasto</span>
        <span className="fpCity">Madrid</span>
        <span className="fpPrice">Starting from $120</span>
        <div className="fpRating">
          <button>8.9</button>
          <span>Excellent</span>
        </div>
      </div>

      <div className="fpItem">
        <img
          src="https://cf.bstatic.com/xdata/images/hotel/max1280x900/215955381.jpg?k=ff739d1d9e0c8e233f78ee3ced82743ef0355e925df8db7135d83b55a00ca07a&o=&hp=1"
          alt=""
          className="fpImg"
        />
        <span className="fpName">Comfort Suites Airport</span>
        <span className="fpCity">Austin</span>
        <span className="fpPrice">Starting from $140</span>
        <div className="fpRating">
          <button>9.3</button>
          <span>Exceptional</span>
        </div>
      </div>

      <div className="fpItem">
        <img
          src="https://cf.bstatic.com/xdata/images/hotel/square600/87428762.webp?k=de5db8fe94cbfe08d3bf16d3c86def035fd73b43ee497cffe27b03363764e0e2&o="
          alt=""
          className="fpImg"
        />
        <span className="fpName">Four Seasons Hotel</span>
        <span className="fpCity">Lisbon</span>
        <span className="fpPrice">Starting from $99</span>
        <div className="fpRating">
          <button>8.8</button>
          <span>Excellent</span>
        </div>
      </div>

      <div className="fpItem">
        <img
          src="https://cf.bstatic.com/xdata/images/hotel/square600/420377357.webp?k=29a0e9879ac8361539c3dae41f047d383e6fa6917f8f47cb50dad001ada0eae6&o="
          alt=""
          className="fpImg"
        />
        <span className="fpName">Hilton Garden Inn</span>
        <span className="fpCity">Berlin</span>
        <span className="fpPrice">Starting from $105</span>
        <div className="fpRating">
          <button>8.9</button>
          <span>Excellent</span>
        </div>
      </div>
    </div>
  );
};
export default FeaturedProperties;
------------
.fp {
  width: 100%;
  max-width: 1024px;
  display: flex;
  justify-content: space-between;
  gap: 20px;
}
.fpItem {
  flex: 1;
  /* gap: 5px; */
  display: flex;
  flex-direction: column;
}
.fpImg {
  width: 100%;
  height: 250px;
  object-fit: cover;
  border-radius: 2px;
}
.fpName {
  color: #333;
  font-weight: bold;
  padding-top: 5px;
}

.fpCity {
  font-weight: 300;
  font-size: 12px;
  color: gray;
}

.fpPrice {
  font-weight: 400;
  padding: 5px 0;
}

.fpRating > button {
  background-color: #003580;
  color: white;
  border: none;
  padding: 3px;
  margin-right: 10px;
  font-weight: bold;
  border-radius: 2px;
}

.fpRating > span {
  font-size: 14px;
}
=======================================
import "./footer.css";

const Footer = () => {
  return (
    <div className="footer">
      <div className="fLists">
        <ul className="fList">
          <li className="fListItem">Countries</li>
          <li className="fListItem">Regions</li>
          <li className="fListItem">Cities</li>
          <li className="fListItem">Districts</li>
          <li className="fListItem">Airports</li>
          <li className="fListItem">Hotels</li>
        </ul>
        <ul className="fList">
          <li className="fListItem">Homes </li>
          <li className="fListItem">Apartments </li>
          <li className="fListItem">Resorts </li>
          <li className="fListItem">Villas</li>
          <li className="fListItem">Hostels</li>
          <li className="fListItem">Guest houses</li>
        </ul>
        <ul className="fList">
          <li className="fListItem">Unique places to stay </li>
          <li className="fListItem">Reviews</li>
          <li className="fListItem">Unpacked: Travel articles </li>
          <li className="fListItem">Travel communities </li>
          <li className="fListItem">Seasonal and holiday deals </li>
        </ul>
        <ul className="fList">
          <li className="fListItem">Car rental </li>
          <li className="fListItem">Flight Finder</li>
          <li className="fListItem">Restaurant reservations </li>
          <li className="fListItem">Travel Agents </li>
        </ul>
        <ul className="fList">
          <li className="fListItem">Curtomer Service</li>
          <li className="fListItem">Partner Help</li>
          <li className="fListItem">Careers</li>
          <li className="fListItem">Sustainability</li>
          <li className="fListItem">Press center</li>
          <li className="fListItem">Safety Resource Center</li>
          <li className="fListItem">Investor relations</li>
          <li className="fListItem">Terms & conditions</li>
        </ul>
      </div>
      <div className="fText">Copyright Â© 2022 Lamabooking.</div>
    </div>
  );
};

export default Footer;
------------------
.footer {
  width: 100%;
  width: 1024px;
  font-size: 12px;
  margin-top: 30px;
}

.fLists {
  width: 100%;
  display: flex;
  justify-content: space-between;
  margin-bottom: 50px;
}

.fList {
  list-style: none;
  padding: 0;
}

.fListItem {
  margin-bottom: 10px;
  color: #003580;
  cursor: pointer;
  font-weight: 400;
  font-size: 14px;
}

.fText {
  text-align: center;
  margin-bottom: 20px;
}
========================================
import {
  faBed,
  faCar,
  faPlane,
  faTaxi,
  faCalendarDays,
  faPerson,
} from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

import { useState } from "react";
import { useNavigate } from "react-router-dom";

import { DateRange } from "react-date-range";
import "react-date-range/dist/styles.css"; // main css file
import "react-date-range/dist/theme/default.css"; // theme css file
import { format } from "date-fns";

import "./header.css";

const Header = ({ type }) => {
  // date state
  const [destination, setDestination] = useState("");
  const [openDate, setOpenDate] = useState(false);
  const [date, setDate] = useState([
    {
      startDate: new Date(),
      endDate: new Date(),
      key: "selection",
    },
  ]);

  // no of person state
  const [openOptions, setOpenOptions] = useState(false);
  const [options, setOptions] = useState({
    adult: 1,
    children: 0,
    room: 1,
  });

  //choosing adult/child/room event
  const handleOption = (name, operation) => {
    setOptions((prev) => {
      return {
        ...prev,
        [name]: operation === "i" ? options[name] + 1 : options[name] - 1,
      };
    });
  };

  const navigate = useNavigate();
  const handleSearch = () => {
    navigate("/hotels", { state: { destination, date, options } });
  };

  return (
    <div className="header">
      <div
        className={
          type === "list" ? "headerContainer listMode" : "headerContainer"
        }
      >
        <div className="headerList">
          <div className="headerListItem active">
            <FontAwesomeIcon icon={faBed} />
            <span>Stays</span>
          </div>
          <div className="headerListItem">
            <FontAwesomeIcon icon={faPlane} />
            <span>Flights</span>
          </div>
          <div className="headerListItem">
            <FontAwesomeIcon icon={faCar} />
            <span>Car rentals</span>
          </div>
          <div className="headerListItem">
            <FontAwesomeIcon icon={faBed} />
            <span>Attractions</span>
          </div>
          <div className="headerListItem">
            <FontAwesomeIcon icon={faTaxi} />
            <span>Airport taxis</span>
          </div>
        </div>

        {type !== "list" && (
          <>
            <div>
              <h1 className="headerTitle">
                A lifetime of discount ? It's Genius{" "}
              </h1>
              <p className="headerDesc">
                Get rewarded for your travels â unlock instant savings of 10% or
                more with a free Lamabooking account
              </p>
              <button className="headerBtn">Sign in / Register</button>
            </div>

            <div className="headerSearch">
              <div className="headerSearchItem">
                <FontAwesomeIcon icon={faBed} className="headerIcon" />
                <input
                  className="headerSearchInput"
                  type="text"
                  placeholder="Where are you going?..."
                  onChange={(e) => setDestination(e.target.value)}
                />
              </div>

              <div className="headerSearchItem">
                <FontAwesomeIcon icon={faCalendarDays} className="headerIcon" />
                <span
                  onClick={() => setOpenDate(!openDate)}
                  className="headerSearchText"
                >{`${format(date[0].startDate, "dd-MM-yyyy")} to ${format(
                  date[0].endDate,
                  "dd-MM-yyyy"
                )} `}</span>
                {openDate && (
                  <DateRange
                    editableDateInputs={true}
                    onChange={(item) => setDate([item.selection])}
                    moveRangeOnFirstSelection={false}
                    ranges={date}
                    className="date"
                    minDate={new Date()}
                  />
                )}
              </div>

              <div className="headerSearchItem">
                <FontAwesomeIcon icon={faPerson} className="headerIcon" />
                <span
                  onClick={() => setOpenOptions(!openOptions)}
                  className="headerSearchText"
                >
                  {`${options.adult} adult â¢  
            ${options.children} children â¢ 
            ${options.room} room`}
                </span>

                {openOptions && (
                  <div className="options">
                    <div className="optionItem">
                      <span className="optionText">Adult</span>
                      <div className="optionCounter">
                        <button
                          disabled={options.adult <= 1}
                          className="optionCounterButton"
                          onClick={() => handleOption("adult", "d")}
                        >
                          -
                        </button>
                        <span className="optionCounterNumber">
                          {" "}
                          {options.adult}{" "}
                        </span>
                        <button
                          className="optionCounterButton"
                          onClick={() => handleOption("adult", "i")}
                        >
                          +
                        </button>
                      </div>
                    </div>

                    <div className="optionItem">
                      <span className="optionText">Children </span>
                      <div className="optionCounter">
                        <button
                          disabled={options.children <= 0}
                          className="optionCounterButton"
                          onClick={() => handleOption("children", "d")}
                        >
                          -
                        </button>
                        <span className="optionCounterNumber">
                          {options.children}
                        </span>
                        <button
                          className="optionCounterButton"
                          onClick={() => handleOption("children", "i")}
                        >
                          +
                        </button>
                      </div>
                    </div>

                    <div className="optionItem">
                      <span className="optionText">room </span>
                      <div className="optionCounter">
                        <button
                          disabled={options.room <= 1}
                          className="optionCounterButton"
                          onClick={() => handleOption("room", "d")}
                        >
                          -
                        </button>
                        <span className="optionCounterNumber">
                          {" "}
                          {options.room}{" "}
                        </span>
                        <button
                          className="optionCounterButton"
                          onClick={() => handleOption("room", "i")}
                        >
                          +
                        </button>
                      </div>
                    </div>
                  </div>
                )}
              </div>

              <div className="headerSearchItem">
                <button className="headerBtn" onClick={handleSearch}>
                  Search
                </button>
              </div>
            </div>
          </>
        )}
      </div>
    </div>
  );
};

export default Header;
---------------------
.header {
  background-color: #003580;
  color: white;
  display: flex;
  justify-content: center;
  position: relative;
}

.headerContainer {
  width: 100%;
  max-width: 1024px;
  margin: 20px 0 100px 0;
}
.headerContainer.listMode {
  margin: 20px 0 0 0;
}
.headerList {
  display: flex;
  gap: 40px;
}
.headerListItem {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 50px;
}
.headerListItem.active {
  border: 1px solid white;
  padding: 10px;
  border-radius: 20px;
}

.headerDesc {
  margin: 20px 0;
}

.headerBtn {
  background-color: #0071c2;
  color: white;
  border: none;
  border-radius: 2px;
  padding: 10px;
  font-weight: 500;
  cursor: pointer;
  font-weight: 500;
  font-size: 14px;
}

.headerSearch {
  height: 30px;
  width: 100%;
  max-width: 1024px;
  background-color: white;
  border: 3px solid #febb02;

  display: flex;
  align-items: center;
  justify-content: space-around;
  border-radius: 5px;
  padding: 30px 0px;

  position: absolute;
  bottom: -25px;
}

.headerIcon {
  color: gray;
}

.headerSearchItem {
  display: flex;
  align-items: center;
  gap: 10px;

  position: relative;
}
.headerSearchInput {
  border: none;
  outline: none;
  padding: 5px 0;
}
.headerSearchText {
  color: lightgray;
  cursor: pointer;
}

.date {
  position: absolute;
  top: 50px;
  z-index: 2;
}

.options {
  z-index: 2;
  position: absolute;
  top: 50px;
  background-color: white;
  color: gray;
  border-radius: 5px;
  -webkit-box-shadow: 0px 0px 10px -5px rgba(0, 0, 0, 0.4);
  box-shadow: 0px 0px 10px -5px rgba(0, 0, 0, 0.4);
}
.optionItem {
  width: 200px;
  display: flex;
  justify-content: space-between;
  margin: 10px;
}
.optionCounter {
  display: flex;
  align-items: center;

  gap: 10px;
  font-size: 12px;
  color: black;
}
.optionCounterButton {
  width: 25px;
  height: 25px;
  border: 1px solid #0071c2;
  color: #0071c2;
  cursor: pointer;
  background-color: white;
}

.optionCounterButton:disabled {
  cursor: not-allowed;
}
==============================================
import "./mailList.css";

const MailList = () => {
  return (
    <div className="mail">
      <h1 className="mailTitle">Save time, save money!</h1>
      <span className="mailDesc">
        Sign up and we'll send the best deals to you
      </span>
      <div className="mailInputContainer">
        <input type="text" placeholder="Your Email" />
        <button> Subscribe </button>
      </div>
    </div>
  );
};

export default MailList;
------------------
.mail {
  width: 100%;
  margin-top: 50px;
  background-color: #003580;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  padding: 50px;
}
.mailInputContainer > input {
  width: 300px;
  height: 30px;
  padding: 10px;
  border: none;
  margin-right: 10px;
  border-radius: 5px;
}
.mailInputContainer > button {
  height: 30px;
  width: fit-content;
  padding: 10px;
  background-color: #0071c2;
  color: white;
  font-weight: 500;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
==================================================
import { Link } from "react-router-dom";
import "./navbar.css";

const Navbar = () => {
  return (
    <div className="navbar">
      <div className="navContainer">
        <Link className="link" to="/">
          <span className="logo">Booking</span>
        </Link>

        <div className="navItems">
          <button className="navButton">Register</button>
          <button className="navButton">Login</button>
        </div>
      </div>
    </div>
  );
};

export default Navbar;
---------------------
.navbar {
  height: 50px;
  background-color: #003580;
  display: flex;
  justify-content: center;
}

.navContainer {
  width: 100%;
  max-width: 1024px;
  color: white;

  display: flex;
  align-items: center;
  justify-content: space-between;
}

.logo {
  font-weight: 500;
}

.navButton {
  margin-left: 20px;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
  color: #003580;
  border-radius: 2px;
}
======================================================
import "./propertyList.css";

const PropertyList = () => {
  return (
    <div className="pList">
      <div className="pListItem">
        <img
          src="https://cf.bstatic.com/xdata/images/xphoto/square300/57584488.webp?k=bf724e4e9b9b75480bbe7fc675460a089ba6414fe4693b83ea3fdd8e938832a6&o="
          alt=""
          className="pListImg"
        />
        <div className="pListTitles">
          <h1>Hotels</h1>
          <h2>233 hotels</h2>
        </div>
      </div>

      <div className="pListItem">
        <img
          src="https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-apartments_300/9f60235dc09a3ac3f0a93adbc901c61ecd1ce72e.jpg"
          alt=""
          className="pListImg"
        />
        <div className="pListTitles">
          <h1>Apartments</h1>
          <h2>2331 hotels</h2>
        </div>
      </div>

      <div className="pListItem">
        <img
          src="https://cf.bstatic.com/static/img/theme-index/carousel_320x240/bg_resorts/6f87c6143fbd51a0bb5d15ca3b9cf84211ab0884.jpg"
          alt=""
          className="pListImg"
        />
        <div className="pListTitles">
          <h1>Resorts</h1>
          <h2>2331 hotels</h2>
        </div>
      </div>

      <div className="pListItem">
        <img
          src="https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-villas_300/dd0d7f8202676306a661aa4f0cf1ffab31286211.jpg"
          alt=""
          className="pListImg"
        />
        <div className="pListTitles">
          <h1>Villas</h1>
          <h2>2331 hotels</h2>
        </div>
      </div>

      <div className="pListItem">
        <img
          src="https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-chalet_300/8ee014fcc493cb3334e25893a1dee8c6d36ed0ba.jpg"
          alt=""
          className="pListImg"
        />
        <div className="pListTitles">
          <h1>Cabins</h1>
          <h2>2331 hotels</h2>
        </div>
      </div>
    </div>
  );
};

export default PropertyList;
-----------------------------------
.pList {
  width: 100%;
  max-width: 1024px;
  display: flex;
  justify-content: space-between;
  gap: 20px;
}

.pListItem {
  flex: 1;
  border-radius: 10px;
  overflow: hidden;
  cursor: pointer;
}
.pListImg {
  width: 100%;
  height: 150px;
  object-fit: cover;
}

.pListTitles > h1 {
  font-size: 18px;
  color: #444;
}

.pListTitles > h2 {
  font-size: 14px;
  font-weight: 300;
}
========================================
import { useNavigate } from "react-router-dom";
import "./searchItem.css";

const SearchItem = () => {
  const navigate = useNavigate();
  const handleCheck = () => {
    navigate("/hotels/id");
  };
  return (
    <div className="searchItem">
      <img
        src="https://cf.bstatic.com/xdata/images/hotel/square600/261707778.webp?k=fa6b6128468ec15e81f7d076b6f2473fa3a80c255582f155cae35f9edbffdd78&o=&s=1"
        alt=""
        className="siImg"
      />
      <div className="siDesc">
        <h1 className="siTitle">Tower Street Apartments</h1>
        <span className="siDistance">500m from center</span>
        <span className="siTaxiOp">Free airport taxi</span>
        <span className="siSubtitle">
          Studio Apartment with Air conditioning
        </span>
        <span className="siFeatures">
          Entire studio â¢ 1 bathroom â¢ 21mÂ² 1 full bed
        </span>
        <span className="siCancelOp">Free cancellation </span>
        <span className="siCancelOpSubtitle">
          You can cancel later, so lock in this great price today!
        </span>
      </div>
      <div className="siDetails">
        <div className="siRating">
          <span>Excellent</span>
          <button>8.9</button>
        </div>
        <div className="siDetailTexts">
          <span className="siPrice">$112</span>
          <span className="siTaxOp">Includes taxes and fees</span>
          <button onClick={handleCheck} className="siCheckButton">
            See availability
          </button>
        </div>
      </div>
    </div>
  );
};

export default SearchItem;
----------------------------
.searchItem {
  border: 1px solid lightgray;
  padding: 10px;
  border-radius: 5px;

  display: flex;
  justify-content: space-between;
  gap: 20px;

  margin-bottom: 20px;
}

.siImg {
  width: 200px;
  height: 200px;
  object-fit: cover;
}
.siDesc {
  display: flex;
  flex-direction: column;
  gap: 10px;
  flex: 2;
}
.siTitle {
  font-size: 20px;
  color: #0071c2;
}
.siDistance {
  font-size: 12px;
}

.siTaxiOp {
  font-size: 12px;
  background-color: #008009;
  color: white;
  width: max-content;
  padding: 3px;
  border-radius: 5px;
}

.siSubtitle {
  font-size: 12px;
  font-weight: bold;
}

.siFeatures {
  font-size: 12px;
}

.siCancelOp {
  font-size: 12px;
  color: #008009;
  font-weight: bold;
}

.siCancelOpSubtitle {
  font-size: 12px;
  color: #008009;
}

.siDetails {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.siRating {
  display: flex;
  justify-content: space-between;
}

.siRating > span {
  font-weight: 500;
}
.siRating > button {
  background-color: #003580;
  color: white;
  padding: 5px;
  font-weight: bold;
  border: none;
  border-radius: 2px;
}

.siDetailTexts {
  text-align: right;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.siPrice {
  font-size: 24px;
}

.siTaxOp {
  font-size: 12px;
  color: gray;
}

.siCheckButton {
  background-color: #0071c2;
  color: white;
  font-weight: bold;
  padding: 10px 5px;
  border: none;
  cursor: pointer;
  border-radius: 5px;
}
=================================
pages
=================================
import Featured from "../../components/featured/Featured";
import FeaturedProperties from "../../components/featuredProperties/FeaturedProperties";
import Footer from "../../components/footer/Footer";
import Header from "../../components/header/Header";
import MailList from "../../components/mailList/MailList";
import Navbar from "../../components/navbar/Navbar";
import PropertyList from "../../components/propertyList/propertyList";
import "./home.css";

const Home = () => {
  return (
    <div>
      <Navbar />
      <Header />
      <div className="homeContainer">
        <Featured />

        <h1 className="homeTitle">Browse by property type</h1>
        <PropertyList />

        <h1 className="homeTitle">Home guests love</h1>
        <FeaturedProperties />

        <MailList />
        <Footer />
      </div>
    </div>
  );
};

export default Home;
-------------------
.homeContainer {
  margin-top: 50px;

  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
}

.homeTitle {
  width: 1024px;
  font-size: 20px;
}
============================
import "./hotel.css";
import Navbar from "../../components/navbar/Navbar";
import Header from "../../components/header/Header";
import MailList from "../../components/mailList/MailList";
import Footer from "../../components/footer/Footer";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCircleArrowLeft,
  faCircleArrowRight,
  faCircleXmark,
  faLocation,
} from "@fortawesome/free-solid-svg-icons";
import { useState } from "react";

const Hotel = () => {
  const [slideNumber, setSlideNumber] = useState(0);
  const [open, setOpen] = useState(false);

  const photos = [
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261707778.jpg?k=56ba0babbcbbfeb3d3e911728831dcbc390ed2cb16c51d88159f82bf751d04c6&o=&hp=1",
    },
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261707367.jpg?k=cbacfdeb8404af56a1a94812575d96f6b80f6740fd491d02c6fc3912a16d8757&o=&hp=1",
    },
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261708745.jpg?k=1aae4678d645c63e0d90cdae8127b15f1e3232d4739bdf387a6578dc3b14bdfd&o=&hp=1",
    },
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261707776.jpg?k=054bb3e27c9e58d3bb1110349eb5e6e24dacd53fbb0316b9e2519b2bf3c520ae&o=&hp=1",
    },
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261708693.jpg?k=ea210b4fa329fe302eab55dd9818c0571afba2abd2225ca3a36457f9afa74e94&o=&hp=1",
    },
    {
      src: "https://cf.bstatic.com/xdata/images/hotel/max1280x900/261707389.jpg?k=52156673f9eb6d5d99d3eed9386491a0465ce6f3b995f005ac71abc192dd5827&o=&hp=1",
    },
  ];

  const handleOpen = (i) => {
    setSlideNumber(i);
    setOpen(true);
  };
  const handleMove = (direction) => {
    let newSlideNumber;

    if (direction === "l") {
      newSlideNumber = slideNumber === 0 ? 5 : slideNumber - 1;
    } else {
      newSlideNumber = slideNumber === 5 ? 0 : slideNumber + 1;
    }
    setSlideNumber(newSlideNumber);
  };

  return (
    <div>
      <Navbar />
      <Header type="list" />

      <div className="hotelContainer">
        {open && (
          <div className="slider">
            <FontAwesomeIcon
              onClick={() => setOpen(false)}
              className="close"
              icon={faCircleXmark}
            />
            <FontAwesomeIcon
              onClick={() => handleMove("l")}
              className="arrow"
              icon={faCircleArrowLeft}
            />
            <div className="sliderWrapper">
              <img
                src={photos[slideNumber].src}
                alt="image"
                className="sliderImg"
              />
            </div>
            <FontAwesomeIcon
              onClick={() => handleMove("r")}
              className="arrow"
              icon={faCircleArrowRight}
            />
          </div>
        )}
        <div className="hotelWrapper">
          <button className="bookNow">Reserve or Book now</button>
          <h1 className="hotelTitle">Grand Hotel</h1>
          <div className="hotelAddress">
            <FontAwesomeIcon icon={faLocation} />
            <span>Elton St 125 Newyork</span>
          </div>

          <span className="hotelDistance">
            Excellent location - 500m from the center
          </span>

          <span className="hotelPriceHighlight">
            Book a stay over $114 at this property and get a free airport taxi
          </span>

          <div className="hotelImages">
            {photos.map((photo, i) => (
              <div className="hotelImgWrapper" key={i}>
                <img
                  onClick={() => handleOpen(i)}
                  src={photo.src}
                  alt="image"
                  className="hotelImg"
                />
              </div>
            ))}
          </div>

          <div className="hotelDetails">
            <div className="hotelDetailsTexts">
              <h1 className="hotelTitle">Stay in the heart of City</h1>
              <p className="hotelDesc">
                Located a 5-minute walk from St. Florians Gate in Krakow, Tower
                Street Apartments has accommodations with air conditioning and
                free WiFi. The units come with hardwood floors and feature a
                fully equipped kitchenette with a microwave, a flat-screen TV,
                and a private bathroom with shower and a hairdryer. A fridge is
                also offered, as well as an electric tea pot and a coffee
                machine. Popular points of interest near the apartment include
                Cloth Hall, Main Market Square and Town Hall Tower. The nearest
                airport is John Paul II International KrakÃ³wâBalice, 16.1 km
                from Tower Street Apartments, and the property offers a paid
                airport shuttle service.
              </p>
            </div>

            <div className="hotelDetailsPrice">
              <h1>Perfect for a 9-night stay!</h1>
              <span>
                Located in the real heart of Krakow, this property has an
                excellent location score of 9.8!
              </span>
              <h2>
                <b>$945</b> (9 nights)
              </h2>
              <button>Reserve or Book Now!</button>
            </div>
          </div>
        </div>

        <MailList />
        <Footer />
      </div>
    </div>
  );
};

export default Hotel;
----------------------------
.hotelContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.hotelWrapper {
  width: 100%;
  max-width: 1024px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  position: relative;
}

.bookNow {
  position: absolute;
  top: 10px;
  right: 0;
  border: none;
  padding: 10px 20px;
  background-color: #0071c2;
  color: white;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
}

.hotelTitle {
  font-size: 24px;
}

.hotelAddress {
  font-size: 12px;
  display: flex;
  align-items: center;
  gap: 10px;
}

.hotelDistance {
  color: #0071c2;
  font-weight: 500;
}

.hotelPriceHighlight {
  color: #008009;
  font-weight: 500;
}

.hotelImages {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.hotelImgWrapper {
  width: 33%;
}

.hotelImg {
  width: 100%;
  object-fit: cover;
  cursor: pointer;
}

.hotelDetails {
  display: flex;
  justify-content: space-between;
  gap: 20px;
  margin-top: 20px;
}

.hotelDetailsTexts {
  flex: 3;
}

.hotelDesc {
  font-size: 14px;
  margin-top: 20px;
}

.hotelDetailsPrice {
  flex: 1;
  background-color: #ebf3ff;
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.hotelDetailsPrice > h1 {
  font-size: 18px;
  color: #555;
}
.hotelDetailsPrice > span {
  font-size: 14px;
}
.hotelDetailsPrice > h2 {
  font-weight: 300;
}
.hotelDetailsPrice > button {
  border: none;
  padding: 10px 20px;
  background-color: #0071c2;
  color: white;
  font-weight: bold;
  cursor: pointer;
  border-radius: 5px;
}

.slider {
  position: sticky;
  top: 0;
  left: 0;
  width: 100%;
  /* max-width: 1024px; */
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.613);
  z-index: 999;
  display: flex;
  align-items: center;
  overflow-x: hidden;
}

.sliderWrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  /* padding: 10px; */
}

.sliderImg {
  width: 80%;
  height: 80vh;
  object-fit: cover;
}

.close {
  position: absolute;
  top: 20px;
  right: 20px;
  font-size: 30px;
  color: lightgray;
  cursor: pointer;
  /* padding: 10px; */
}

.arrow {
  margin: 20px;
  font-size: 50px;
  color: lightgray;
  cursor: pointer;
}
=====================================
import Navbar from "../../components/navbar/Navbar";
import Header from "../../components/header/Header";
import "./list.css";
import { useLocation } from "react-router-dom";
import { useState } from "react";
import { format } from "date-fns";
import { DateRange } from "react-date-range";
import SearchItem from "../../components/searchItem/SearchItem";

const List = () => {
  const location = useLocation();
  const [destination, setDestination] = useState(location.state.destination);
  const [date, setDate] = useState(location.state.date);
  const [openDate, setOpenDate] = useState(false);
  const [options, setOptions] = useState(location.state.options);
  return (
    <div>
      <Navbar />
      <Header type="list" />

      <div className="listContainer">
        <div className="listWrapper">
          <div className="listSearch">
            <h1 className="lsTitle">Search</h1>
            <div className="lsItem">
              <label>Destination</label>
              <input type="text" placeholder={destination} />
            </div>

            <div className="lsItem">
              <label>Check-in Date</label>
              <span onClick={() => setOpenDate(!openDate)}>
                {`${format(date[0].startDate, "dd-MM-yyyy")} to ${format(
                  date[0].endDate,
                  "dd-MM-yyyy"
                )} `}
              </span>
              {openDate && (
                <DateRange
                  onChange={(item) => setDate([item.selections])}
                  minDate={new Date()}
                  ranges={date}
                />
              )}
            </div>

            <div className="lsItem">
              <label>Options</label>
              <div className="lsOptions">
                <div className="lsOptionItem">
                  <span className="lsOptionText">
                    Min price <small>per night</small>
                  </span>
                  <input type="number" className="lsOptionInput" min={1} />
                </div>

                <div className="lsOptionItem">
                  <span className="lsOptionText">
                    Max price <small>per night</small>
                  </span>
                  <input type="number" className="lsOptionInput" />
                </div>

                <div className="lsOptionItem">
                  <span className="lsOptionText">Adult</span>
                  <input
                    type="number"
                    min={1}
                    className="lsOptionInput"
                    placeholder={options.adult}
                  />
                </div>

                <div className="lsOptionItem">
                  <span className="lsOptionText">Children</span>
                  <input
                    type="number"
                    min={0}
                    className="lsOptionInput"
                    placeholder={options.children}
                  />
                </div>

                <div className="lsOptionItem">
                  <span className="lsOptionText">Room</span>
                  <input
                    type="number"
                    min={1}
                    className="lsOptionInput"
                    placeholder={options.room}
                  />
                </div>
              </div>
            </div>
            <button>Search</button>
          </div>
          
          <div className="listResult">
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
            <SearchItem />
          </div>
        </div>
      </div>
    </div>
  );
};

export default List;
------------------------
.listContainer {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.listWrapper {
  width: 100%;
  max-width: 1024px;
  display: flex;
  gap: 20px;
}

.listSearch {
  flex: 1;
  background-color: #febb02;
  padding: 10px;
  border-radius: 5px;
  position: sticky;
  top: 10px;
  height: max-content;
}

.lsTitle {
  font-size: 20px;
  color: #555;
  margin-bottom: 10px;
}

.lsItem {
  display: flex;
  flex-direction: column;
  gap: 5px;
  margin-bottom: 10px;
}

.lsItem > label {
  font-size: 12px;
  font-weight: 500;
}
.lsItem > input {
  height: 30px;
  border: none;
  outline: none;
  padding: 5px;
  border-radius: 2px;
}
.lsItem > span {
  font-size: 13px;
  color: #555;
  height: 30px;
  padding: 5px;
  background-color: white;
  border-radius: 2px;

  display: flex;
  align-items: center;
  cursor: pointer;
}

.lsOptions {
  padding: 10px;
}
.lsOptionItem {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
  color: #555;
  font-size: 13px;
}
.lsOptionInput {
  width: 50px;
  outline: none;
}
.listSearch > button {
  padding: 10px;
  background-color: #0071c2;
  color: white;
  border: none;
  width: 100%;
  font-weight: 500;
  border-radius: 3px;
  cursor: pointer;
}

.listResult {
  flex: 3;
}
---------------------------
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap");

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body,
html {
  font-family: "Poppins", sans-serif;
  scroll-behavior: smooth;
}

.link {
  text-decoration: none;
  color: inherit;
}
====================================================
NEWSPAPAPER 

scss
 -component
   -blog.scss
   -feature.scss
   -header.scss
   -index.scss
   -nav.scss
   -new.scss
 -util
    -function.scss
    -index.scss
 -global.scss
 -style.scss
======================================================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="shortcut icon" href="favicon-32x32.png" type="image/x-icon" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>News Homepage</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;800&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <header class="header wrapper">
      <a href="/">
        <img
          class="header__logo"
          src="/img/logo.svg"
          alt="Homepage"
          width="64"
          height="40"
        />
      </a>
      <nav class="nav" aria-label="Site">
        <button
          id="btnOpen"
          class="nav__open"
          aria-labelledby="nav-label"
          aria-expanded="false"
        >
          <span id="nav-label" hidden>Navigation</span>
          <svg
            width="40"
            height="17"
            viewBox="0 0 40 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <rect id="Rectangle" y="7" width="40" height="3" fill="#00001A" />
            <rect
              id="Rectangle_2"
              y="14"
              width="40"
              height="3"
              fill="#00001A"
            />
            <rect id="Rectangle_3" width="40" height="3" fill="#00001A" />
          </svg>
        </button>

        <div class="nav__overlay" aria-hidden="true"></div>

        <div class="nav__content" role="dialog" aria-labelledby="nav-label">
          <button id="btnClose" class="nav__close" aria-label="Close">
            <svg
              width="32"
              height="31"
              viewBox="0 0 32 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              aria-hidden="true"
            >
              <rect
                id="Rectangle"
                x="2.91846"
                y="0.297211"
                width="40"
                height="3"
                transform="rotate(45 2.91846 0.297211)"
                fill="#00001A"
              />
              <rect
                id="Rectangle_2"
                x="0.797363"
                y="28.5815"
                width="40"
                height="3"
                transform="rotate(-45 0.797363 28.5815)"
                fill="#00001A"
              />
            </svg>
          </button>
          <ul class="header__links">
            <li>
              <a class="header__link" href="">Home</a>
            </li>
            <li>
              <a class="header__link" href="">New</a>
            </li>
            <li>
              <a class="header__link" href="">Popular</a>
            </li>
            <li>
              <a class="header__link" href="">Trending</a>
            </li>
            <li>
              <a class="header__link" href="">Categories</a>
            </li>
          </ul>
        </div>
      </nav>
    </header>
    <main>
      <article class="wrapper grid">
        <section class="feature">
          <picture class="feature__picture">
            <source
              media="(min-width: 43.75em)"
              srcset="
                /img/feature-desktop.jpg    1x,
                /img/feature-desktop-2x.jpg 2x
              "
              width="730"
              height="300"
            />
            <img
              class="feature__image"
              width="343"
              height="300"
              src="/img/feature-mobile.jpg"
              alt="assortment of colorful blocks"
              srcset="/img/feature-mobile-2x.jpg 2x"
            />
          </picture>

          <h1 class="feature__headline">The Bright Future of Web 3.0?</h1>
          <div class="feature__description">
            <p>
              We dive into the next evolution of the web that claims to put the
              power of the platforms back into the hands of the people. But is
              it really fulfilling its promise?
            </p>
            <a class="feature__button" href="">Read More</a>
          </div>
        </section>
        <section class="new">
          <h2 class="new__title">New</h2>
          <article class="new__post">
            <h3>
              <a class="new__headline" href="">Hydrogen VS Electric Cars</a>
            </h3>
            <p class="new__description">
              Will hydrogen-fueled cars ever catch up to EVs?
            </p>
          </article>
          <article class="new__post">
            <h3>
              <a class="new__headline" href="">The Downsides of AI Artistry</a>
            </h3>
            <p class="new__description">
              What are the possible adverse effects of on-demand AI image
              generation?
            </p>
          </article>
          <article class="new__post">
            <h3>
              <a class="new__headline" href="">Is VC Funding Drying Up?</a>
            </h3>
            <p class="new__description">
              Private funding by VC firms is down 50% YOY. We take a look at
              what that means.
            </p>
          </article>
        </section>
        <section class="blog">
          <article class="blog__item">
            <img
              src="/img/news-1.jpg"
              alt="retro computer, keyboard, cassette tapes on a desk"
              class="blog__image"
            />
            <div class="blog__number">01</div>
            <h3 class="blog__headline"><a href="">Reviving Retro PCs</a></h3>
            <p class="blog__description">
              What happens when old PCs are given modern upgrades?
            </p>
          </article>
          <article class="blog__item">
            <img
              src="/img/news-2.jpg"
              alt="keyboard with red backlighting"
              class="blog__image"
            />
            <div class="blog__number">02</div>
            <h3 class="blog__headline">
              <a href="">Top 10 Laptops of 2022</a>
            </h3>
            <p class="blog__description">
              Our best picks for various needs and budgets.
            </p>
          </article>
          <article class="blog__item">
            <img
              src="/img/news-3.jpg"
              alt="game controller in the air above a hand"
              class="blog__image"
            />
            <div class="blog__number">03</div>
            <h3 class="blog__headline"><a href="">The Growth of Gaming</a></h3>
            <p class="blog__description">
              How the pandemic has sparked fresh opportunities.
            </p>
          </article>
        </section>
      </article>
    </main>

    <script type="module" src="/main.js"></script>
  </body>
</html>
=====================================
@use '../util' as u;

.blog {
  display: grid;
  gap: u.rem(30);

  @media (width >= u.em(1110)) {
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
    padding-block-start: u.rem(40);
  }

  &__item {
    display: grid;
    grid-template-columns: u.rem(100) auto;
    grid-template-rows: repeat(3, auto);
    gap: u.rem(10) u.rem(24);
  }

  &__image {
    grid-row: 1 / 4;
  }

  &__number {
    color: var(--c-silver);
    font-size: var(--f-m);
    line-height: 1;
    font-weight: 700;
  }

  &__headline {
    align-self: center;

    a {
      color: var(--c-blue);
      font-size: var(--f-xs);
      font-weight: 800;
      line-height: 1.1;

      &:hover {
        color: var(--c-red);
      }
    }
  }

  &__description {
    align-self: end;
  }
}
------------
@use '../util' as u;

.feature {
  display: grid;
  gap: u.rem(24);

  @media (width >= u.em(1110)) {
    gap: u.rem(30);
    grid-column: 1 / 3;
    grid-row: 1 / 3;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
  }

  &__picture {
    @media (width >= u.em(1110)) {
      grid-column: 1 / 3;
    }
  }

  &__image {
  }

  &__headline {
    font-size: u.rem(40);
    font-size: var(--f-xl);
    font-weight: 800;
  }

  &__description {
    p {
      margin-block-end: u.rem(30);
    }
  }

  &__button {
    justify-self: start;
    display: inline-block;
    background-color: var(--c-red);
    color: var(--c-white);
    font-size: u.rem(14);
    letter-spacing: 0.31em;
    font-weight: 700;
    text-transform: uppercase;
    padding: u.rem(12) u.rem(32);

    &:hover {
      background-color: var(--c-blue);
    }
  }
}
--------------------
@use '../util' as u;

.header {
  display: flex;
  justify-content: space-between;
  padding-block: u.rem(30);

  @media (width >= u.em(1110)) {
    padding-block: u.rem(90) u.rem(55);
  }

  &__logo {
    width: u.rem(45);

    @media (width >= u.em(1110)) {
      width: u.rem(64);
    }
  }

  &__links {
    display: flex;
    gap: u.rem(40);

    @media (width < u.em(1110)) {
      flex-direction: column;
      gap: u.rem(24);
    }
  }

  &__link {
    color: var(--c-blue);
    font-size: u.rem(18);
    line-height: 1.3;

    @media (width >= u.em(1110)) {
      font-size: var(--f-body);
      color: var(--c-gray);
    }

    &:hover {
      color: var(--c-red);
    }
  }
}
----------------------
@forward 'header';
@forward 'feature';
@forward 'new';
@forward 'blog';
@forward 'nav';
------------------
@use '../util' as u;

.nav {
  button {
    background: none;
    border: none;
    padding: 0;

    @media (width >= u.em(1110)) {
      display: none;
    }
  }

  &__open[aria-expanded='true'] {
    ~ .nav__content {
      translate: 0;

      @media (prefers-reduced-motion) {
        opacity: 1;
      }
    }

    ~ .nav__overlay {
      opacity: 0.5;
    }
  }

  &__content {
    @media (width < u.em(1110)) {
      display: none;
      position: fixed;
      inset: 0 0 0 u.rem(120);
      background-color: var(--c-white);
      padding: u.rem(30);
      translate: 100vw 0;
      transition: translate 500ms ease-in-out;
    }

    @media (prefers-reduced-motion) {
      translate: 0;
      opacity: 0;
      transition: opacity 500ms ease-in-out;
    }
  }

  &__close {
    display: block;
    margin-inline-start: auto;
    margin-block-end: u.rem(86);
  }

  &__overlay {
    display: none;
    position: fixed;
    inset: 0;
    background-color: var(--c-blue);
    opacity: 0;
    transition: opacity 300ms ease-in-out;
    pointer-events: none;
  }
}
--------------------------
@use '../util' as u;

.new {
  background-color: var(--c-blue);
  padding: u.rem(24) u.rem(20);

  @media (width >= u.em(1110)) {
    grid-column: 3 / 4;
    grid-row: 1 / 3;
  }

  &__title {
    font-size: var(--f-l);
    color: var(--c-yellow);
  }

  &__post {
    padding-block: u.rem(30);
    border-block-end: 1px solid var(--c-gray);

    &:last-child {
      border: none;
    }
  }

  &__headline {
    display: inline-block;
    font-size: var(--f-s);
    font-weight: 800;
    margin-block-end: u.rem(8);
    color: var(--c-white);

    &:hover {
      color: var(--c-yellow);
    }
  }

  &__description {
    font-size: var(--f-body);
    color: var(--c-silver);
  }
}
-----------------------
@use 'sass:math';

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}

@function em($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + em;
  } @else {
    @error 'Don\'t use units when using the em() function; only numbers.';
  }
}
--------------------------
@forward 'functions';
--------------
import './scss/style.scss';

const body = document.querySelector('body');
const main = document.querySelector('main');
const btnOpen = document.querySelector('#btnOpen');
const btnClose = document.querySelector('#btnClose');
const media = window.matchMedia('(width < 69.375em)');
const navContent = document.querySelector('.nav__content');
const navOverlay = document.querySelector('.nav__overlay');

function openMobileMenu() {
  console.log('open menu');

  btnOpen.setAttribute('aria-expanded', 'true');
  body.classList.add('noscroll');
  navContent.removeAttribute('inert');
  main.setAttribute('inert', '');
  btnClose.focus();
}

function closeMobileMenu() {
  console.log('close menu');

  btnOpen.setAttribute('aria-expanded', 'false');
  body.classList.remove('noscroll');
  navContent.setAttribute('inert', '');
  main.removeAttribute('inert');
  btnOpen.focus();
}

function setupNav(e) {
  if (e.matches) {
    // is mobile
    console.log('is mobile');

    navContent.setAttribute('inert', '');

    setTimeout(() => {
      navContent.style.display = 'block';
      navOverlay.style.display = 'block';
    }, 500);
  } else {
    // is desktop
    console.log('is desktop');

    navContent.removeAttribute('inert');
    main.removeAttribute('inert');

    navContent.style.display = '';
  }
}

setupNav(media);

btnOpen.addEventListener('click', openMobileMenu);

btnClose.addEventListener('click', closeMobileMenu);

media.addEventListener('change', function (e) {
  setupNav(e);
});

document.addEventListener('keyup', (e) => {
  if (e.key == 'Tab') {
    console.log(document.activeElement);
  }
});
------------------



















